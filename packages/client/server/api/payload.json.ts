export default defineEventHandler(() => {
  return [{ filePath: '/Users/yuyin/Projects/github/yuyinws/eslint-formatter-inspector/tests/fixtures/foo.vue', messages: [{ ruleId: 'vue/require-v-for-key', severity: 2, message: 'Elements in iteration expect to have \'v-bind:key\' directives.', line: 6, column: 3, nodeType: 'VStartTag', messageId: 'requireKey', endLine: 9, endColumn: 12 }, { ruleId: 'vue/first-attribute-linebreak', severity: 1, message: 'Expected a linebreak before this attribute.', line: 6, column: 8, nodeType: 'VAttribute', messageId: 'expected', endLine: 9, endColumn: 12, fix: { range: [54, 55], text: '\n' } }, { ruleId: 'vue/no-parsing-error', severity: 2, message: 'Parsing error: Property assignment expected.', line: 7, column: 4, nodeType: 'VElement', messageId: 'parsingError' }, { ruleId: 'style/eol-last', severity: 2, message: 'Newline required at end of file but not found.', line: 9, column: 12, nodeType: 'Program', messageId: 'missing', fix: { range: [101, 101], text: '\n' } }, { ruleId: 'vue/no-parsing-error', severity: 2, message: 'Parsing error: eof-in-tag.', line: 9, column: 12, nodeType: 'VElement', messageId: 'parsingError' }], suppressedMessages: [], errorCount: 4, fatalErrorCount: 0, warningCount: 1, fixableErrorCount: 1, fixableWarningCount: 1, source: '<script setup lang="ts">\n\n</script>\n\n<template>\n  <div v-for="i in 10>\n  {{ i }}\n  </div>\n</template>', usedDeprecatedRules: [], relativePath: 'tests/fixtures/foo.vue', messagesGroupedByLine: { 6: [{ ruleId: 'vue/require-v-for-key', severity: 2, message: 'Elements in iteration expect to have \'v-bind:key\' directives.', line: 6, column: 3, nodeType: 'VStartTag', messageId: 'requireKey', endLine: 9, endColumn: 12 }, { ruleId: 'vue/first-attribute-linebreak', severity: 1, message: 'Expected a linebreak before this attribute.', line: 6, column: 8, nodeType: 'VAttribute', messageId: 'expected', endLine: 9, endColumn: 12, fix: { range: [54, 55], text: '\n' } }], 7: [{ ruleId: 'vue/no-parsing-error', severity: 2, message: 'Parsing error: Property assignment expected.', line: 7, column: 4, nodeType: 'VElement', messageId: 'parsingError' }], 9: [{ ruleId: 'style/eol-last', severity: 2, message: 'Newline required at end of file but not found.', line: 9, column: 12, nodeType: 'Program', messageId: 'missing', fix: { range: [101, 101], text: '\n' } }, { ruleId: 'vue/no-parsing-error', severity: 2, message: 'Parsing error: eof-in-tag.', line: 9, column: 12, nodeType: 'VElement', messageId: 'parsingError' }] }, ext: '.vue' }, { filePath: '/Users/yuyin/Projects/github/yuyinws/eslint-formatter-inspector/tests/fixtures/bar.ts', messages: [{ ruleId: 'unused-imports/no-unused-vars', severity: 2, message: '\'bar\' is defined but never used. Allowed unused vars must match /^_/u.', line: 1, column: 10, nodeType: null, messageId: 'unusedVar', endLine: 1, endColumn: 13 }, { ruleId: 'no-console', severity: 2, message: 'Unexpected console statement. Only these console methods are allowed: warn, error.', line: 2, column: 3, nodeType: 'MemberExpression', messageId: 'limited', endLine: 2, endColumn: 14, suggestions: [{ fix: { range: [19, 37], text: '' }, messageId: 'removeConsole', data: { propertyName: 'log' }, desc: 'Remove the console.log().' }] }], suppressedMessages: [], errorCount: 2, fatalErrorCount: 0, warningCount: 0, fixableErrorCount: 0, fixableWarningCount: 0, source: 'function bar() {\n  console.log(\'xxx\')\n}\n', usedDeprecatedRules: [], relativePath: 'tests/fixtures/bar.ts', messagesGroupedByLine: { 1: [{ ruleId: 'unused-imports/no-unused-vars', severity: 2, message: '\'bar\' is defined but never used. Allowed unused vars must match /^_/u.', line: 1, column: 10, nodeType: null, messageId: 'unusedVar', endLine: 1, endColumn: 13 }], 2: [{ ruleId: 'no-console', severity: 2, message: 'Unexpected console statement. Only these console methods are allowed: warn, error.', line: 2, column: 3, nodeType: 'MemberExpression', messageId: 'limited', endLine: 2, endColumn: 14, suggestions: [{ fix: { range: [19, 37], text: '' }, messageId: 'removeConsole', data: { propertyName: 'log' }, desc: 'Remove the console.log().' }] }] }, ext: '.ts' }, { filePath: '/Users/yuyin/Projects/github/yuyinws/eslint-formatter-inspector/tests/fixtures/foo.ts', messages: [{ ruleId: 'unused-imports/no-unused-vars', severity: 2, message: '\'d\' is assigned a value but never used. Allowed unused vars must match /^_/u.', line: 5, column: 7, nodeType: null, messageId: 'unusedVar', endLine: 5, endColumn: 8 }, { ruleId: 'no-console', severity: 2, message: 'Unexpected console statement. Only these console methods are allowed: warn, error.', line: 7, column: 1, nodeType: 'MemberExpression', messageId: 'limited', endLine: 7, endColumn: 12, suggestions: [{ fix: { range: [58, 74], text: '' }, messageId: 'removeConsole', data: { propertyName: 'log' }, desc: 'Remove the console.log().' }] }], suppressedMessages: [], errorCount: 2, fatalErrorCount: 0, warningCount: 0, fixableErrorCount: 0, fixableWarningCount: 0, source: 'const a = 1\nconst b = 2\nconst c = 3\n\nconst d = a + b + c\n\nconsole.log(\'a\')\n', usedDeprecatedRules: [], relativePath: 'tests/fixtures/foo.ts', messagesGroupedByLine: { 5: [{ ruleId: 'unused-imports/no-unused-vars', severity: 2, message: '\'d\' is assigned a value but never used. Allowed unused vars must match /^_/u.', line: 5, column: 7, nodeType: null, messageId: 'unusedVar', endLine: 5, endColumn: 8 }], 7: [{ ruleId: 'no-console', severity: 2, message: 'Unexpected console statement. Only these console methods are allowed: warn, error.', line: 7, column: 1, nodeType: 'MemberExpression', messageId: 'limited', endLine: 7, endColumn: 12, suggestions: [{ fix: { range: [58, 74], text: '' }, messageId: 'removeConsole', data: { propertyName: 'log' }, desc: 'Remove the console.log().' }] }] }, ext: '.ts' }, { filePath: '/Users/yuyin/Projects/github/yuyinws/eslint-formatter-inspector/tests/fixtures/test.json', messages: [{ ruleId: 'jsonc/comma-dangle', severity: 2, message: 'Unexpected trailing comma.', line: 3, column: 26, nodeType: 'JSONProperty', messageId: 'unexpected', endLine: 3, endColumn: 27, fix: { range: [33, 45], text: '"error"\n  }' } }], suppressedMessages: [], errorCount: 1, fatalErrorCount: 0, warningCount: 0, fixableErrorCount: 1, fixableWarningCount: 0, source: '{\n  "rules": {\n    "no-console": "error",\n  }\n}\n', usedDeprecatedRules: [], relativePath: 'tests/fixtures/test.json', messagesGroupedByLine: { 3: [{ ruleId: 'jsonc/comma-dangle', severity: 2, message: 'Unexpected trailing comma.', line: 3, column: 26, nodeType: 'JSONProperty', messageId: 'unexpected', endLine: 3, endColumn: 27, fix: { range: [33, 45], text: '"error"\n  }' } }] }, ext: '.json' }]
})
